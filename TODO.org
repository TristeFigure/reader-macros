* TODO [[http://briancarper.net/blog/449/][Example]] from Brian Carper
  https://github.com/clojure/clojure/blob/master/src/jvm/clojure/lang/LispReader.java#L82

  #+BEGIN_SRC clojure :tangle macros.clj :shebang #!/usr/bin/env clj
    (use 'add-classpath.core)
    (add-classpath "lib/*")
    (add-classpath "lib/dev/*")
    (use 'debug.core)
    (use 'clojure.test)
    
    (defn dispatch-reader-macro [ch fun]
      (let [dm (.get (doto (.getDeclaredField clojure.lang.LispReader "dispatchMacros")
                       (.setAccessible true))
                     nil)]
        (aset dm (int ch) fun)))
    
    (defn reader-macro [ch fun]
      (let [dm (.get (doto (.getDeclaredField clojure.lang.LispReader "macros")
                       (.setAccessible true))
                     nil)]
        (aset dm (int ch) fun)))
    
    (defn uppercase-string [rdr letter-u]
      (let [c (.read rdr)]
        (if (= c (int \"))
          (.toUpperCase (.invoke
                         (clojure.lang.LispReader$StringReader.)
                         rdr
                         c))
          (throw (Exception. (str "Reader barfed on " (char c)))))))
    
    (dispatch-reader-macro \U uppercase-string)
    (reader-macro \U uppercase-string)
    
    (is (= #U"Foo bar BAZ" "FOO BAR BAZ")
        (= U"Foo bar BAZ" "FOO BAR BAZ"))
    
  #+END_SRC
